[
Version=1
]
[
ObjTp=FSgntr
Sgntr=UserMacro
RelVrs=2.07.35
IntStrVrs=2
MinSMWVrs=0
MinTIOVrs=0
SavedBy=SMW2.07.35
]
[
ObjTp=Hd
S0Nd=1
S1Nd=2
SLNd=3
PrNm=riordan keypad decoder.umc
DbVr=18.1.5
CltNm=keypad decoder
McNm=Keypad Decoder v1.2
SmVr=391
DvVr=391
TpN1=1
TpN2=2
TpN3=3
TpN4=4
TpN5=5
APg=1
FpCS=0
Cmn1=Keypad Decoder v1.2\\\\This module takes an analog input signal||1
Cmn2=and generates pulsing digital signals\\which can be used to driver||1
Cmn3=other devices such as a keypad on a driver.\\\\INPUT DESCRIPTIONS:
Cmn4=||1\\\\Name               Type Description\\----------------------
Cmn5=-----------\\analog_in          A    Contains the value of the number||1
Cmn6=to be decoded. No actual decoding occurs\\||F
Cmn7=||2until the "enter" input is triggered.\\enter              D||3
Cmn8=||1Triggers the decoding of the analog input.\\send_all_digits?||3
Cmn9=D    Setting this input to "0" will cause the output pulses to skip||1
Cmn10=over\\                        any "leading zeros." That is, if "analog_in"||1
Cmn11=contains the 35, the\\                        hundreds and thousands||1
Cmn12=digits (both 0) will not be sent. Setting this\\||@
Cmn13=||8input to "1" will cause all digits to be sent (See the "max||1
Cmn14=digits"\\                        parameter below).\\\\OUTPUT DESCRIPTIONS:
Cmn15=||1\\\\Name               Type Description\\----------------------
Cmn16=-----------\\num_x              D    The pulsed digital outputs||1
Cmn17=that represent the value of "analog_in".\\enter_out          D||2
Cmn18=||2A pulsed output that goes high after all digits have been sent.
Cmn19=\\thousands_digit    D    This signal is high while the thousands||1
Cmn20=digit is being pulsed.\\hundreds_digit     D      "    "     "||2
Cmn21=||1"    "    "  hundreds    "    "   "     "\\tens_digit         D||1
Cmn22=||5"    "     "   "    "    "  tens        "    "   "     "\\units_digit||1
Cmn23=||7D      "    "     "   "    "    "  units       "    "   "||1
Cmn24=||4"\\\\\\PARAMETER DESCRIPTIONS:\\Name               Type Description\\
Cmn25=---------------------------------\\digit pulse time   TIME Specifies||1
Cmn26=the pulse length for the pulsed output signals.\\digit delay||4
Cmn27=||4TIME Specifies the amount of delay between each pulsed digit.
Cmn28=\\max digits      DECIMAL Sets the maximum number of digits that||1
Cmn29=will be sent. If the\\                        "send_all_digits?"||1
Cmn30=input is set high, only the number of\\                        digits||1
Cmn31=set by this parameter will actually be sent.\\\\Revision history:
Cmn32=\\\\v1.0: initial release\\\\v1.1: -replaced Delay symbol with Stepper||1
Cmn33=to prevent improper time settings\\       from causing macro to||1
Cmn34=not work\\      -removed "send_enter_out" input. Now the module||1
Cmn35=always sends the enter\\       command after the digits are sent.
Cmn36=||1If you do not want the enter\\       command sent to the device,||1
Cmn37=simply do not connect the output signal\\       to the driver.\\
Cmn38=\\v1.2: -extended functionality to allow decoding of up to 4-digit||1
Cmn39=values
]
[
ObjTp=Bk
Nm1=\
Sx1=854
Sy1=0
Mx1=0
]
[
ObjTp=Bw
H=1
Lx=854
Ly=0
Rx=2221
Ry=1007
Xm=853
Ym=-1
SH=35
Z=100
Ht=4
Hi=2
]
[
ObjTp=Symbol
Name=riordan keypad decoder
Code=1
SmplCName=riordan keypad decoder.umc
Smpl-C=3
CompilerTimePrecision=Single_Or_Double_Precision
Hint=keypad decoder
SMWRev=0
TIORev=0
HelpID=1055
APg=1
NumFixedInputs=3
NumFixedOutputs=15
NumFixedParams=3
MinVariableInputs=0
MinVariableInputsList2=0
MinVariableInputsList3=0
MinVariableOutputs=0
MinVariableOutputsList2=0
MinVariableOutputsList3=0
MinVariableParams=0
SymbolTree=1
InputSigType1=Analog
InputSigType2=Digital
ParamSigType1=Time
ParamSigType2=Time
ParamSigType3=Time|Percent|Constant|String|FileName|HexAddress|Any
InputCue1=analog_in
InputCue2=enter
InputCue3=send_all_digits?
OutputCue1=num_0
OutputCue2=num_1
OutputCue3=num_2
OutputCue4=num_3
OutputCue5=num_4
OutputCue6=num_5
OutputCue7=num_6
OutputCue8=num_7
OutputCue9=num_8
OutputCue10=num_9
OutputCue11=enter_out
OutputCue12=thousands_digit
OutputCue13=hundreds_digit
OutputCue14=tens_digit
OutputCue15=units_digit
ParamCue1=digit pulse time
ParamCue2=digit delay
ParamCue3=max digits
FileName=riordan keypad decoder.umc
]
[
ObjTp=Sm
H=1
SmC=157
Nm=Central Control Modules
CF=2
n1I=1
n1O=1
mI=1
mO=1
tO=1
mP=1
P1=
]
[
ObjTp=Sm
H=2
SmC=157
Nm=Network Modules
CF=2
n1I=1
n1O=1
mI=1
mO=1
tO=1
mP=1
P1=
]
[
ObjTp=Sm
H=3
SmC=157
Nm=Ethernet
CF=2
n1I=1
n1O=1
mI=1
mO=1
tO=1
mP=1
P1=
]
[
ObjTp=Sm
H=4
SmC=156
Nm=Logic
CF=2
mC=10
C1=7
C2=22
C3=23
C4=14
C5=15
C6=16
C7=19
C8=13
C9=21
C10=35
]
[
ObjTp=Sm
H=5
SmC=157
Nm=DefineArguments
CF=2
n1I=1
n1O=1
mC=1
C1=6
mI=1
mO=1
tO=1
mP=1
P1=
]
[
ObjTp=Sm
H=6
SmC=55
PrH=5
CF=2
n1I=3
n1O=15
mI=3
I1=4
I2=15
I3=47
mO=15
tO=15
O1=5
O2=6
O3=7
O4=8
O5=9
O6=10
O7=11
O8=12
O9=13
O10=14
O11=50
O12=67
O13=59
O14=60
O15=61
mP=3
P1=digit pulse time
P2=digit delay
P3=max digits
]
[
ObjTp=Sm
H=7
SmC=78
PrH=4
CF=2
n1I=2
n1O=40
Cmn1=extract digits
mI=2
I1=4
mO=40
tO=40
O1=16
O2=17
O3=18
O4=19
O5=20
O6=21
O7=22
O8=23
O9=24
O10=25
O11=26
O12=27
O13=28
O14=29
O15=30
O16=31
O17=32
O18=33
O19=34
O20=35
O21=36
O22=37
O23=38
O24=39
O25=40
O26=41
O27=42
O28=43
O29=44
O30=45
O31=49
O32=57
O33=80
O34=81
O35=82
O36=83
O37=84
O38=85
O39=86
O40=87
]
[
ObjTp=Sm
H=8
SmC=20
PrH=15
CF=2
n1I=11
n1O=10
Cmn1=hundreds digit
mI=11
I1=51
I2=36
I3=37
I4=38
I5=39
I6=40
I7=41
I8=42
I9=43
I10=44
I11=45
mO=10
tO=10
O1=5
O2=6
O3=7
O4=8
O5=9
O6=10
O7=11
O8=12
O9=13
O10=14
]
[
ObjTp=Sm
H=9
SmC=20
PrH=19
CF=2
n1I=11
n1O=10
Cmn1=units digit
mI=11
I1=56
I2=16
I3=17
I4=18
I5=19
I6=20
I7=21
I8=22
I9=23
I10=24
I11=25
mO=10
tO=10
O1=5
O2=6
O3=7
O4=8
O5=9
O6=10
O7=11
O8=12
O9=13
O10=14
]
[
ObjTp=Sm
H=10
SmC=20
PrH=16
CF=2
n1I=11
n1O=10
Cmn1=tens digit
mI=11
I1=55
I2=26
I3=27
I4=28
I5=29
I6=30
I7=31
I8=32
I9=33
I10=34
I11=35
mO=10
tO=10
O1=5
O2=6
O3=7
O4=8
O5=9
O6=10
O7=11
O8=12
O9=13
O10=14
]
[
ObjTp=Sm
H=11
SmC=20
PrH=14
CF=2
n1I=11
n1O=10
Cmn1=thousands digit\\
mI=11
I1=88
I2=49
I3=57
I4=80
I5=81
I6=82
I7=83
I8=84
I9=85
I10=86
I11=87
mO=10
tO=10
O1=5
O2=6
O3=7
O4=8
O5=9
O6=10
O7=11
O8=12
O9=13
O10=14
]
[
ObjTp=Sm
H=12
SmC=4
PrH=14
CF=2
n1I=4
n1O=1
Cmn1=maximum digits >= 4\\
mI=4
I1=69
I2=64
I3=63
I4=89
mO=1
tO=1
O1=90
]
[
ObjTp=Sm
H=13
SmC=20
PrH=4
CF=2
n1I=2
n1O=1
Cmn1=send enter
mI=2
I1=2
I2=48
mO=1
tO=1
O1=50
]
[
ObjTp=Sm
H=14
SmC=156
PrH=4
CF=2
Cmn1=thousands digit\\
mC=4
C1=11
C2=37
C3=12
C4=40
]
[
ObjTp=Sm
H=15
SmC=156
PrH=4
CF=2
Cmn1=hundreds digit\\
mC=4
C1=8
C2=17
C3=24
C4=42
]
[
ObjTp=Sm
H=16
SmC=156
PrH=4
CF=2
Cmn1=tens digit\\
mC=4
C1=10
C2=18
C3=27
C4=43
]
[
ObjTp=Sm
H=17
SmC=20
PrH=15
CF=2
n1I=2
n1O=1
Cmn1=send hundreds digit
mI=2
I1=54
I2=66
mO=1
tO=1
O1=51
]
[
ObjTp=Sm
H=18
SmC=20
PrH=16
CF=2
n1I=2
n1O=1
Cmn1=send tens digit
mI=2
I1=53
I2=58
mO=1
tO=1
O1=55
]
[
ObjTp=Sm
H=19
SmC=156
PrH=4
CF=2
Cmn1=units digit\\
mC=4
C1=9
C2=20
C3=30
C4=41
]
[
ObjTp=Sm
H=20
SmC=20
PrH=19
CF=2
n1I=2
n1O=1
Cmn1=send units digit
mI=2
I1=52
I2=46
mO=1
tO=1
O1=56
]
[
ObjTp=Sm
H=21
SmC=20
PrH=4
CF=2
n1I=5
n1O=4
Cmn1=allow macro users to know which digit is being sent
mI=5
I1=2
I2=88
I3=51
I4=55
I5=56
mO=4
tO=4
O1=67
O2=59
O3=60
O4=61
]
[
ObjTp=Sm
H=22
SmC=32
PrH=4
CF=2
n1I=1
n1O=1
Cmn1=set max digits variable
mI=1
I1=2
mO=1
tO=1
O1=62
mP=1
P1=#max digits
]
[
ObjTp=Sm
H=23
SmC=38
PrH=4
CF=2
n1I=2
n1O=4
Cmn1=read max digits
mI=2
I1=62
I2=2
mO=4
tO=4
O1=69
O2=64
O3=63
O4=89
mP=4
P1=0d
P2=1d
P3=2d
P4=3d
]
[
ObjTp=Sm
H=24
SmC=4
PrH=15
CF=2
n1I=3
n1O=1
Cmn1=maximum digits >= 3
mI=3
I1=69
I2=64
I3=63
mO=1
tO=1
O1=71
]
[
ObjTp=Sm
H=27
SmC=4
PrH=16
CF=2
n1I=2
n1O=1
Cmn1=maximum digits >= 2
mI=2
I1=69
I2=64
mO=1
tO=1
O1=73
]
[
ObjTp=Sm
H=30
SmC=4
PrH=19
CF=2
n1I=1
n1O=1
Cmn1=maximum digits >= 1
mI=1
I1=69
mO=1
tO=1
O1=76
]
[
ObjTp=Sm
H=35
SmC=98
PrH=4
CF=2
n1I=1
n1O=6
Cmn1=sequence digits\\
mI=1
I1=15
mO=6
tO=6
O1=68
O2=94
O3=66
O4=58
O5=46
O6=48
mP=10
P1=#digit delay
P2=#digit pulse time
P3=#digit delay
P4=#digit pulse time
P5=#digit delay
P6=#digit pulse time
P7=#digit delay
P8=#digit pulse time
P9=#digit delay
P10=#digit pulse time
]
[
ObjTp=Sm
H=37
SmC=20
PrH=14
CF=2
n1I=2
n1O=1
Cmn1=send thousands digit\\
mI=2
I1=93
I2=94
mO=1
tO=1
O1=88
]
[
ObjTp=Sm
H=40
SmC=28
PrH=14
CF=2
n1I=3
n1O=1
Cmn1=when to send thousands digit\\
mI=3
I1=90
I2=49
I3=47
mO=1
tO=1
O1=93
mP=4
P1=L,H,H,H
P2=X,X,L,H
P3=X,H,X,L
P4=L,H,H,L
]
[
ObjTp=Sm
H=41
SmC=28
PrH=19
CF=2
n1I=6
n1O=1
Cmn1=when to send units digit\\
mI=6
I1=76
I2=49
I3=36
I4=26
I5=16
I6=47
mO=1
tO=1
O1=52
mP=7
P1=L,H,H,H,H,H,H
P2=X,X,L,X,X,X,H
P3=X,X,X,L,X,X,H
P4=X,X,X,X,L,X,H
P5=X,X,X,X,X,L,H
P6=X,H,X,X,X,X,L
P7=L,H,H,H,H,H,L
]
[
ObjTp=Sm
H=42
SmC=28
PrH=15
CF=2
n1I=4
n1O=1
Cmn1=when to send hundreds digit\\
mI=4
I1=71
I2=49
I3=36
I4=47
mO=1
tO=1
O1=54
mP=5
P1=L,H,H,H,H
P2=X,X,L,H,H
P3=X,X,X,L,H
P4=X,H,X,X,L
P5=L,H,H,H,L
]
[
ObjTp=Sm
H=43
SmC=28
PrH=16
CF=2
n1I=5
n1O=1
Cmn1=when to send tens digit\\
mI=5
I1=73
I2=49
I3=36
I4=26
I5=47
mO=1
tO=1
O1=53
mP=6
P1=L,H,H,H,H,H
P2=X,X,L,X,X,H
P3=X,X,X,L,X,H
P4=X,X,X,X,L,H
P5=X,H,X,X,X,L
P6=L,H,H,H,H,L
]
[
ObjTp=Sg
H=4
Nm=analog_in
SgTp=2
]
[
ObjTp=Sg
H=5
Nm=num_0
]
[
ObjTp=Sg
H=6
Nm=num_1
]
[
ObjTp=Sg
H=7
Nm=num_2
]
[
ObjTp=Sg
H=8
Nm=num_3
]
[
ObjTp=Sg
H=9
Nm=num_4
]
[
ObjTp=Sg
H=10
Nm=num_5
]
[
ObjTp=Sg
H=11
Nm=num_6
]
[
ObjTp=Sg
H=12
Nm=num_7
]
[
ObjTp=Sg
H=13
Nm=num_8
]
[
ObjTp=Sg
H=14
Nm=num_9
]
[
ObjTp=Sg
H=15
Nm=enter
]
[
ObjTp=Sg
H=16
Nm=u0
]
[
ObjTp=Sg
H=17
Nm=u1
]
[
ObjTp=Sg
H=18
Nm=u2
]
[
ObjTp=Sg
H=19
Nm=u3
]
[
ObjTp=Sg
H=20
Nm=u4
]
[
ObjTp=Sg
H=21
Nm=u5
]
[
ObjTp=Sg
H=22
Nm=u6
]
[
ObjTp=Sg
H=23
Nm=u7
]
[
ObjTp=Sg
H=24
Nm=u8
]
[
ObjTp=Sg
H=25
Nm=u9
]
[
ObjTp=Sg
H=26
Nm=t0
]
[
ObjTp=Sg
H=27
Nm=t1
]
[
ObjTp=Sg
H=28
Nm=t2
]
[
ObjTp=Sg
H=29
Nm=t3
]
[
ObjTp=Sg
H=30
Nm=t4
]
[
ObjTp=Sg
H=31
Nm=t5
]
[
ObjTp=Sg
H=32
Nm=t6
]
[
ObjTp=Sg
H=33
Nm=t7
]
[
ObjTp=Sg
H=34
Nm=t8
]
[
ObjTp=Sg
H=35
Nm=t9
]
[
ObjTp=Sg
H=36
Nm=h0
]
[
ObjTp=Sg
H=37
Nm=h1
]
[
ObjTp=Sg
H=38
Nm=h2
]
[
ObjTp=Sg
H=39
Nm=h3
]
[
ObjTp=Sg
H=40
Nm=h4
]
[
ObjTp=Sg
H=41
Nm=h5
]
[
ObjTp=Sg
H=42
Nm=h6
]
[
ObjTp=Sg
H=43
Nm=h7
]
[
ObjTp=Sg
H=44
Nm=h8
]
[
ObjTp=Sg
H=45
Nm=h9
]
[
ObjTp=Sg
H=46
Nm=send_units
]
[
ObjTp=Sg
H=47
Nm=send_all_digits?
]
[
ObjTp=Sg
H=48
Nm=send_enter
]
[
ObjTp=Sg
H=49
Nm=k0
]
[
ObjTp=Sg
H=50
Nm=enter_out
]
[
ObjTp=Sg
H=51
Nm=send_hundreds_ok
]
[
ObjTp=Sg
H=52
Nm=enable_units
]
[
ObjTp=Sg
H=53
Nm=enable_tens
]
[
ObjTp=Sg
H=54
Nm=enable_hundreds
]
[
ObjTp=Sg
H=55
Nm=send_tens_ok
]
[
ObjTp=Sg
H=56
Nm=send_units_ok
]
[
ObjTp=Sg
H=57
Nm=k1
]
[
ObjTp=Sg
H=58
Nm=send_tens
]
[
ObjTp=Sg
H=59
Nm=hundreds_digit
]
[
ObjTp=Sg
H=60
Nm=tens_digit
]
[
ObjTp=Sg
H=61
Nm=units_digit
]
[
ObjTp=Sg
H=62
Nm=max_digits
SgTp=2
]
[
ObjTp=Sg
H=63
Nm=max_digits_2
]
[
ObjTp=Sg
H=64
Nm=max_digits_1
]
[
ObjTp=Sg
H=66
Nm=send_hundreds
]
[
ObjTp=Sg
H=67
Nm=thousands_digit
]
[
ObjTp=Sg
H=68
Nm=//decoder_busy
]
[
ObjTp=Sg
H=69
Nm=max_digits_0
]
[
ObjTp=Sg
H=71
Nm=max_digits>=3
]
[
ObjTp=Sg
H=73
Nm=max_digits>=2
]
[
ObjTp=Sg
H=76
Nm=max_digits>=1
]
[
ObjTp=Sg
H=80
Nm=k2
]
[
ObjTp=Sg
H=81
Nm=k3
]
[
ObjTp=Sg
H=82
Nm=k4
]
[
ObjTp=Sg
H=83
Nm=k5
]
[
ObjTp=Sg
H=84
Nm=k6
]
[
ObjTp=Sg
H=85
Nm=k7
]
[
ObjTp=Sg
H=86
Nm=k8
]
[
ObjTp=Sg
H=87
Nm=k9
]
[
ObjTp=Sg
H=88
Nm=send_thousands_ok
]
[
ObjTp=Sg
H=89
Nm=max_digits_3
]
[
ObjTp=Sg
H=90
Nm=max_digits>=4
]
[
ObjTp=Sg
H=93
Nm=enable_thousands
]
[
ObjTp=Sg
H=94
Nm=send_thousands
]
